rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // lock down the db
    match /{document=**} {
      allow read: if false;
      allow write: if false;
    }

    // path for posts document
    match /posts/{postId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isPostContentOwner() && isPostDataValid();
      allow update: if isAuthenticated() && isPostContentOwner() && userOwnsPost() && isPostDataValid();
      allow delete: if isAuthenticated() && userOwnsPost();
    }

    function isAuthenticated() {
      return request.auth != null && request.auth.uid != null;
    }

    function isPostContentOwner() {
      return request.auth.uid == incomingData().userId;
    }

    function userOwnsPost() {
      return existingData().userId == request.auth.uid;
    }

    function isPostDataValid() {
      return incomingData().title.size() < 10;
    }

    function existingData() {
      return resource.data;
    }

    function incomingData() {
      return request.resource.data;
    }
  }
}
